[build-system]
requires = ["setuptools >= 35.0.2", "wheel >= 0.29.0", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
force_grid_wrap = 0
force_sort_within_sections = true
forced_separate = "tests"
include_trailing_comma = true
indent = "    "
known_first_party = "aioambient,examples,tests"
line_length = 88
multi_line_output = 3
not_skip = "__init__.py"
sections = "FUTURE,STDLIB,INBETWEENS,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
use_parentheses = true

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
no_implicit_optional = true
python_version = "3.8"
show_error_codes = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
name = "aioambient"
version = "1.2.4"
description = "A clean, async-friendly library for the Ambient Weather API"
readme = "README.md"
authors = ["Aaron Bach <bachya1208@gmail.com>"]
license = "MIT"
repository = "https://github.com/bachya/aioambient"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[tool.poetry.dependencies]
aiohttp = "^3.7.4"
python = "^3.6.1"
python-engineio = ">=3.13.1,<5.0.0"
python-socketio = ">=4.6,<6.0"
websockets = ">=8.1,<10.0"

[tool.poetry.dev-dependencies]
aresponses = "^2.0.0"
asynctest = "^0.13.0"
pre-commit = "^2.0.1"
pytest = "^6.0.0"
pytest-aiohttp = "^0.3.0"
pytest-cov = "^2.8.1"
